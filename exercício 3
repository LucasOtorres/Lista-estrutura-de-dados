public class FilaCircular<T> {
    private T[] elementos;
    private int frente;
    private int tras;
    private int tamanho;
    private int capacidade;

    @SuppressWarnings("unchecked")
    public FilaCircular(int capacidade) {
        this.capacidade = capacidade;
        elementos = (T[]) new Object[capacidade];
        frente = 0;
        tras = 0;
        tamanho = 0;
    }

    public void enfileirar(T elemento) {
        if (tamanho == capacidade) {
            throw new IllegalStateException("Fila cheia");
        }
        elementos[tras] = elemento;
        tras = (tras + 1) % capacidade;
        tamanho++;
    }

    public T desenfileirar() {
        if (estaVazia()) {
            throw new IllegalStateException("Fila vazia");
        }
        T elemento = elementos[frente];
        frente = (frente + 1) % capacidade;
        tamanho--;
        return elemento;
    }

    public T primeiro() {
        if (estaVazia()) {
            throw new IllegalStateException("Fila vazia");
        }
        return elementos[frente];
    }

    public boolean estaVazia() {
        return tamanho == 0;
    }
}
 
